ylab("Discharge (cm s-1)") +
guides(color=guide_legend(title="")) +
plot_theme
### Format and finalize the plot
# Create a theme variable to build upon
plot_theme <- theme_bw() + theme(
panel.grid.major = element_blank(), # Clear the major grid lines
panel.grid.minor = element_blank(), # Clear the minor grid lines
legend.position = c(0.87, 0.25), # Change legend position
legend.background = element_rect(fill = "white", color = "black"))
# Plot code
plot_p3 + scale_y_continuous(expand = c(0, 0),
limits = c(0,1.3)) + #Force y-axis to start at zero
labs(title="Dobson Creek: Monthly discharge",
subtitle="Reynolds Creek CZO",
caption="Caption text goes here") +
xlab("Month") +
ylab("Discharge (cm s-1)") +
guides(color=guide_legend(title="")) +
plot_theme
### Format and finalize the plot
# Create a theme variable to build upon
plot_theme <- theme_bw() + theme(
panel.grid.major = element_blank(), # Clear the major grid lines
panel.grid.minor = element_blank(), # Clear the minor grid lines
legend.position = c(0.87, 0.25), # Change legend position
legend.background = element_rect(fill = "white", color = ""))
# Plot code
plot_p3 + scale_y_continuous(expand = c(0, 0),
limits = c(0,1.3)) + #Force y-axis to start at zero
labs(title="Dobson Creek: Monthly discharge",
subtitle="Reynolds Creek CZO",
caption="Caption text goes here") +
xlab("Month") +
ylab("Discharge (cm s-1)") +
guides(color=guide_legend(title="")) +
plot_theme
### Format and finalize the plot
# Create a theme variable to build upon
plot_theme <- theme_bw() + theme(
panel.grid.major = element_blank(), # Clear the major grid lines
panel.grid.minor = element_blank(), # Clear the minor grid lines
legend.position = c(0.87, 0.25), # Change legend position
legend.background = element_rect(fill = "white"))
# Plot code
plot_p3 + scale_y_continuous(expand = c(0, 0),
limits = c(0,1.3)) + #Force y-axis to start at zero
labs(title="Dobson Creek: Monthly discharge",
subtitle="Reynolds Creek CZO",
caption="Caption text goes here") +
xlab("Month") +
ylab("Discharge (cm s-1)") +
guides(color=guide_legend(title="")) +
plot_theme
### Format and finalize the plot
# Create a theme variable to build upon
plot_theme <- theme_bw() + theme(
panel.grid.major = element_blank(), # Clear the major grid lines
panel.grid.minor = element_blank(), # Clear the minor grid lines
legend.position = c(0.87, 1), # Change legend position
legend.background = element_rect(fill = "white"))
# Plot code
plot_p3 + scale_y_continuous(expand = c(0, 0),
limits = c(0,1.3)) + #Force y-axis to start at zero
labs(title="Dobson Creek: Monthly discharge",
subtitle="Reynolds Creek CZO",
caption="Caption text goes here") +
xlab("Month") +
ylab("Discharge (cm s-1)") +
guides(color=guide_legend(title="")) +
plot_theme
### Format and finalize the plot
# Create a theme variable to build upon
plot_theme <- theme_bw() + theme(
panel.grid.major = element_blank(), # Clear the major grid lines
panel.grid.minor = element_blank(), # Clear the minor grid lines
legend.position = c(0.8, 0.8), # Change legend position, values are percent of axis length
legend.background = element_rect(fill = "white"))
# Plot code
plot_p3 + scale_y_continuous(expand = c(0, 0),
limits = c(0,1.3)) + #Force y-axis to start at zero
labs(title="Dobson Creek: Monthly discharge",
subtitle="Reynolds Creek CZO",
caption="Caption text goes here") +
xlab("Month") +
ylab("Discharge (cm s-1)") +
guides(color=guide_legend(title="")) +
plot_theme
### Format and finalize the plot
# Create a theme variable to build upon
plot_theme <- theme_bw() + theme(
panel.grid.major = element_blank(), # Clear the major grid lines
panel.grid.minor = element_blank(), # Clear the minor grid lines
legend.position = c(0.9, 0.9), # Change legend position, values are percent of axis length
legend.background = element_rect(fill = "white"))
# Plot code
plot_p3 + scale_y_continuous(expand = c(0, 0),
limits = c(0,1.3)) + #Force y-axis to start at zero
labs(title="Dobson Creek: Monthly discharge",
subtitle="Reynolds Creek CZO",
caption="Caption text goes here") +
xlab("Month") +
ylab("Discharge (cm s-1)") +
guides(color=guide_legend(title="")) +
plot_theme
# Plot code
plot_p3 + scale_y_continuous(expand = c(0, 0),
limits = c(0,1.3)) + #Force y-axis to start at zero
labs(title="Dobson Creek: Monthly discharge",
subtitle="Reynolds Creek CZO",
caption="Caption text goes here") +
xlab("Month") +
#ylab("Discharge (cm s-1)") +
ylab(expression(paste("Discharge (cm s",^-1))) +
guides(color=guide_legend(title="")) +
plot_theme
# Plot code
plot_p3 + scale_y_continuous(expand = c(0, 0),
limits = c(0,1.3)) + #Force y-axis to start at zero
labs(title="Dobson Creek: Monthly discharge",
subtitle="Reynolds Creek CZO",
caption="Caption text goes here") +
xlab("Month") +
#ylab("Discharge (cm s-1)") +
ylab(expression(paste("Discharge (cm s",~^-1))) +
guides(color=guide_legend(title="")) +
plot_theme
# Plot code
plot_p3 + scale_y_continuous(expand = c(0, 0),
limits = c(0,1.3)) + #Force y-axis to start at zero
labs(title="Dobson Creek: Monthly discharge",
subtitle="Reynolds Creek CZO",
caption="Caption text goes here") +
xlab("Month") +
#ylab("Discharge (cm s-1)") +
ylab(expression(Discharge~(cm s^-1))) +
guides(color=guide_legend(title="")) +
plot_theme
# Plot code
plot_p3 + scale_y_continuous(expand = c(0, 0),
limits = c(0,1.3)) + #Force y-axis to start at zero
labs(title="Dobson Creek: Monthly discharge",
subtitle="Reynolds Creek CZO",
caption="Caption text goes here") +
xlab("Month") +
#ylab("Discharge (cm s-1)") +
ylab(expression(paste0("Discharge (cm ",s^-1,")"))) +
guides(color=guide_legend(title="")) +
plot_theme
# Plot code
plot_p3 + scale_y_continuous(expand = c(0, 0),
limits = c(0,1.3)) + #Force y-axis to start at zero
labs(title="Dobson Creek: Monthly discharge",
subtitle="Reynolds Creek CZO",
caption="Caption text goes here") +
xlab("Month") +
#ylab("Discharge (cm s-1)") +
ylab(expression(paste0("Discharge (cm "s^-1")"))) +
guides(color=guide_legend(title="")) +
plot_theme
# Plot code
plot_p3 + scale_y_continuous(expand = c(0, 0),
limits = c(0,1.3)) + #Force y-axis to start at zero
labs(title="Dobson Creek: Monthly discharge",
subtitle="Reynolds Creek CZO",
caption="Caption text goes here") +
xlab("Month") +
#ylab("Discharge (cm s-1)") +
ylab(expression(paste("Discharge (cm ",s^-1,")"))) +
guides(color=guide_legend(title="")) +
plot_theme
### Panel plot
ggarrange(plot_p1, plot_p3,
labels = c("Plot 1", "Plot 2"),
ncol = 1, nrow = 2,
common.legend = TRUE,
legend="bottom")
### Panel plot
library(ggpubr)
ggarrange(plot_p1, plot_p3,
labels = c("Plot 1", "Plot 2"),
ncol = 1, nrow = 2,
common.legend = TRUE,
legend="bottom")
ggarrange(plot_p1, plot_p3,
labels = c("Plot 1", "Plot 2"),
ncol = 2, nrow = 1,
common.legend = TRUE,
legend="bottom")
?data.folder
?data.folder
library(readxl)
library(tidyverse)
library(Rcpp)
stream_data_loc <- ("C:/Users/Derek/Google Drive/Work/Courses/BIOL 6692 - ISU Data Management/Lecture materials/Lecture 2/Water Chem/Data/WY2015_stream_chem.xlsx")
getwd()
reynolds <- read_excel(stream_data_loc, sheet = "Reynolds MTN")
stream_data_loc <- ("C:/Users/Derek/Google Drive/Work/Courses/BIOL 6692 - ISU Data Management/Lecture materials/Lecture 2/Water Chem/Data/WY2015_stream_chem.xlsx")
getwd()
reynolds <- read_excel(stream_data_loc, sheet = "Reynolds MTN")
reynolds <- read_excel(stream_data_loc, sheet = "Reynolds MTN")
reynolds <- read_excel(stream_data_loc, sheet = "Reynolds Mtn")
dobson <- read_excel(stream_data_loc, sheet = "Dobson")
johnston <- read_excel(stream_data_loc, sheet = "Johnston")
tollgate <- read_excel(stream_data_loc, sheet = "Tollgate")
outlet <- read_excel(stream_data_loc, sheet = "Outlet")
master.list <- rbind(reynolds, dobson, johnston, tollgate, outlet)
?data.folder
data.folder <- "C:/Users/Derek/Google Drive/Work/Courses/BIOL 6692 - ISU Data Management/Lecture materials/Lecture 2/Water Chem/Data"
data.folder <- "C:/Users/Derek/Google Drive/Work/Courses/BIOL 6692 - ISU Data Management/Lecture materials/Lecture 2/Water Chem/Data"
WC.files <- list.files(data.folder, pattern = ".xlsx")
WC.master <- NULL
for(i in 1:lenght(master.list)) {
RM <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Reynolds Mtn")
Dob <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Dobson")
John <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Johnston")
Toll <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Tollgate")
Out <- read_excel(paste0(data_folder, WC.files[i]), sheet = "Outlet")
if(all(colnames(RM) == colnames(Dob)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Dobson")
break
}
if(all(colnames(RM) == colnames(John)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Johnston")
break
}
if(all(colnames(RM) == colnames(Toll)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Tollgate")
break
}
if(all(colnames(RM) == colnames(Out)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Outlet")
break
}
}
for(i in 1:length(master.list)) {
RM <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Reynolds Mtn")
Dob <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Dobson")
John <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Johnston")
Toll <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Tollgate")
Out <- read_excel(paste0(data_folder, WC.files[i]), sheet = "Outlet")
if(all(colnames(RM) == colnames(Dob)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Dobson")
break
}
if(all(colnames(RM) == colnames(John)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Johnston")
break
}
if(all(colnames(RM) == colnames(Toll)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Tollgate")
break
}
if(all(colnames(RM) == colnames(Out)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Outlet")
break
}
}
WC.files <- list.files(data.folder, pattern = ".xlsx")
WC.files
for(i in 1:length(master.list)) {
RM <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Reynolds Mtn")
Dob <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Dobson")
John <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Johnston")
Toll <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Tollgate")
Out <- read_excel(paste0(data_folder, WC.files[i]), sheet = "Outlet")
if(all(colnames(RM) == colnames(Dob)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Dobson")
break
}
if(all(colnames(RM) == colnames(John)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Johnston")
break
}
if(all(colnames(RM) == colnames(Toll)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Tollgate")
break
}
if(all(colnames(RM) == colnames(Out)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Outlet")
break
}
}
data.folder <- "C:/Users/Derek/Google Drive/Work/Courses/BIOL 6692 - ISU Data Management/Lecture materials/Lecture 2/Water Chem/Data/"
WC.files <- list.files(data.folder, pattern = ".xlsx")
WC.files
WC.master <- NULL
for(i in 1:length(master.list)) {
RM <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Reynolds Mtn")
Dob <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Dobson")
John <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Johnston")
Toll <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Tollgate")
Out <- read_excel(paste0(data_folder, WC.files[i]), sheet = "Outlet")
if(all(colnames(RM) == colnames(Dob)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Dobson")
break
}
if(all(colnames(RM) == colnames(John)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Johnston")
break
}
if(all(colnames(RM) == colnames(Toll)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Tollgate")
break
}
if(all(colnames(RM) == colnames(Out)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Outlet")
break
}
}
for(i in 1:length(master.list)) {
RM <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Reynolds Mtn")
Dob <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Dobson")
John <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Johnston")
Toll <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Tollgate")
Out <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Outlet")
if(all(colnames(RM) == colnames(Dob)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Dobson")
break
}
if(all(colnames(RM) == colnames(John)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Johnston")
break
}
if(all(colnames(RM) == colnames(Toll)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Tollgate")
break
}
if(all(colnames(RM) == colnames(Out)) != TRUE) {
print(WChem_files[i])
print("Error in colnames for Outlet")
break
}
}
for(i in 1:length(master.list)) {
RM <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Reynolds Mtn")
Dob <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Dobson")
John <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Johnston")
Toll <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Tollgate")
Out <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Outlet")
if(all(colnames(RM) == colnames(Dob)) != TRUE) {
print(WC_files[i])
print("Error in colnames for Dobson")
break
}
if(all(colnames(RM) == colnames(John)) != TRUE) {
print(WC_files[i])
print("Error in colnames for Johnston")
break
}
if(all(colnames(RM) == colnames(Toll)) != TRUE) {
print(WC_files[i])
print("Error in colnames for Tollgate")
break
}
if(all(colnames(RM) == colnames(Out)) != TRUE) {
print(WC_files[i])
print("Error in colnames for Outlet")
break
}
}
for(i in 1:length(master.list)) {
RM <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Reynolds Mtn")
Dob <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Dobson")
John <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Johnston")
Toll <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Tollgate")
Out <- read_excel(paste0(data.folder, WC.files[i]), sheet = "Outlet")
if(all(colnames(RM) == colnames(Dob)) != TRUE) {
print(WC.files[i])
print("Error in colnames for Dobson")
break
}
if(all(colnames(RM) == colnames(John)) != TRUE) {
print(WC.files[i])
print("Error in colnames for Johnston")
break
}
if(all(colnames(RM) == colnames(Toll)) != TRUE) {
print(WC.files[i])
print("Error in colnames for Tollgate")
break
}
if(all(colnames(RM) == colnames(Out)) != TRUE) {
print(WC.files[i])
print("Error in colnames for Outlet")
break
}
}
for  (i in 1:10) {
x <- i * 10
print(x)
}
# Description: Plot Reynolds Creek CZO water chemistry data
# Author: Derek Pierson
# Date: Jan 26, 2022
# Load packages
library(dplyr)
library(ggplot2)
# Set working drive to script folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Load data
wq <- read.csv("WaterQ_data.csv", as.is=T)
wq$Sample_Collection.Date..mm.dd.yyyy.
?as.POSIXlt
# POSIXlt date format
wq$datetime <- as.POSIXlt(wq$datetime, tryFormats = c("%Y-%m-%d %H:%M:%OS",
"%Y/%m/%d %H:%M:%OS",
"%Y-%m-%d %H:%M",
"%Y/%m/%d %H:%M",
"%Y-%m-%d",
"%Y/%m/%d"))
wq$datetime
# Select data of interest
dobson_grab <- wq %>% filter(Subcatchment == "Dobson") %>%
filter(Sample_Type == "Grab") %>%
filter(!is.na(datetime)) %>% # remove data rows without a datetime value
select(Subcatchment, Sample_Type, datetime, # Select the columns to keep using the column names
qcms, # Discharge in cm s-1
X.Carbon..dissolved.organic..mg.L.,
X.Carbon..dissolved.organic.blank.corrected...mg.L.,
Nitrogen..total..mg.L.,
Nitrogen..total_Blank_Corrected..mg.L.) %>%
`colnames<-`(c("Subcatchment", "Sample_Type", "datetime",
"Discharge", "DOC", "DOC_BC", "TN", "TN_BC"))
View(dobson_grab)
View(wq)
View(dobson_grab)
dobson_monthly <- dobson_grab %>% group_by(sample_month_num, sample_month) %>%
summarize(n = n(),
Q_avg = mean(Discharge, na.rm = T), # na.rm is important, otherwise if any value is NA, returns NA
Q_sd = sd(Discharge, na.rm = T),
Q_min = min(Discharge, na.rm = T),
Q_max = max(Discharge, na.rm = T))
dobson_grab$sample_month <- format(dobson_grab$datetime,"%b") # %b gives the abbreviated month name
dobson_grab$sample_month_num <- as.numeric(format(dobson_grab$datetime,"%m")) # %m gives the month number
# Summarize data by month
dobson_monthly <- dobson_grab %>% group_by(sample_month_num, sample_month) %>%
summarize(n = n(),
Q_avg = mean(Discharge, na.rm = T), # na.rm is important, otherwise if any value is NA, returns NA
Q_sd = sd(Discharge, na.rm = T),
Q_min = min(Discharge, na.rm = T),
Q_max = max(Discharge, na.rm = T))
View(dobson_monthly)
# Summarize data by month
dobson_monthly <- dobson_grab %>% group_by(sample_month) %>%
summarize(n = n(),
sample_month_num = unique(sample_month_num),
Q_avg = mean(Discharge, na.rm = T), # na.rm is important, otherwise if any value is NA, returns NA
Q_sd = sd(Discharge, na.rm = T),
Q_min = min(Discharge, na.rm = T),
Q_max = max(Discharge, na.rm = T))
### Plot mean discharge by month
# Example 1
ggplot(data=dobson_monthly, aes(x=sample_month, y=Q_avg)) + geom_histogram(stat='identity')
?geom_histogram
# Example 2
ggplot(dobson_monthly, aes(x = reorder(sample_month, sample_month_num), y = Q_avg)) + geom_bar(stat = "identity", fill="dark green")
# Example 3
dobson_monthly$sample_month <- factor(dobson_monthly$sample_month,levels = c("Jan", "Feb", "Mar", "Apr",
"May", "Jun", "Jul", "Aug",
"Sep", "Oct", "Nov", "Dec"))
ggplot(dobson_monthly, aes(x=sample_month, y=Q_avg)) + geom_histogram(stat='identity', fill='dark blue')
### Add min and max discharge
# Plot part 1
plot_p1 <- ggplot(dobson_monthly, aes(x=sample_month, y=Q_avg)) + geom_histogram(stat='identity', fill='dark blue')
plot_p1
### Add min and max discharge
# Plot part 1
plot_p1 <- ggplot(dobson_monthly, aes(x=sample_month, y=Q_avg)) + geom_histogram(stat='identity', fill='dark blue')
plot_p1
# Add max Q points to part 1
plot_p2 <- plot_p1 + geom_point(aes(x=sample_month, y=Q_max, colour = 'Max Q'))
# Add max Q points to part 1
plot_p2 <- plot_p1 + geom_point(aes(x=sample_month, y=Q_max, colour = 'Max Q'))
plot_p2
# Add min Q points
plot_p3 <- plot_p2 + geom_point(aes(x=sample_month, y=Q_min, colour = 'Min Q'))
plot_p3
plot_theme <- theme_bw() + theme(
panel.grid.major = element_blank(), # Clear the major grid lines
panel.grid.minor = element_blank(), # Clear the minor grid lines
legend.position = c(0.9, 0.9), # Change legend position, values are percent of axis length
legend.background = element_rect(fill = "white"))
plot_p3 + scale_y_continuous(expand = c(0, 0),
limits = c(0,1.3)) + #Force y-axis to start at zero
labs(title="Dobson Creek: Monthly discharge",
subtitle="Reynolds Creek CZO",
caption="Caption text goes here") +
xlab("Month") +
ylab("Discharge (cm s-1)") +
#ylab(expression(paste("Discharge (cm ",s^-1,")"))) +
guides(color=guide_legend(title="")) +
plot_theme
